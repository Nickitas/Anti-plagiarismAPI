from time import time
from datetime import datetime
from KeywordExtractor import KeywordExtractor
from GoogleSearchParser import GoogleSearchParser


text = """Интеллектуальные методы информационной безопасности – это подходы, основанные на использовании искусственного интеллекта и машинного обучения для повышения уровня защиты информации и борьбы с киберугрозами. С развитием технологий и использованием компьютеров в различных сферах, данные являются одним из наиболее ценных ресурсов. Потеря данных может привести к серьезным последствиям и негативно повлиять на работу организаций и частных лиц. Одним из основных факторов потери данных является поломка оборудования, включая компьютеры и другие устройства хранения информации. Для предотвращения потери данных и обеспечения безопасности информации, необходимо использовать интеллектуальные методы оценки состояния оборудования компьютеров. Эти методы используют искусственный интеллект и машинное обучение для определения вероятности поломки оборудования до того, как она произойдет. Таким образом, можно выполнить профилактические меры и заменить неисправное оборудование, прежде чем оно приведет к потере данных. Разработка и использование интеллектуальных методов оценки состояния оборудования компьютеров актуальная тема, которая имеет большое значение для защиты ценных данных и продолжительной работы компьютерных систем. В этой области проводятся регулярные исследования и разработки новых методов и подходов, что позволяет повысить эффективность защиты информации и минимизировать риски потери данных. Для решения рассматриваемой мною проблемы следует понимать основные концепции и подходы с использованием искусственного интеллекта и машинного обучения в интересующей области.
Выбранные источники по нейронным сетям представляют собой важный ресурс для понимания и изучения данной области науки. Они предоставляют качественное понимание теории и практики при проектировании и создании нейронных сетей, методов искусственного интеллекта и его дальнейшего использования в прикладных задачах.
"""

text2 = """Безопасность информации, является одним из самых острых и
приоритетных вопросов. Системы защиты информации очень востребованы,
как среди государственных и коммерческих организаций, так и в жизни всего
современного общества в целом. Электронные торговые площадки и сетевые
предприниматели нуждаются в защите конфиденциальной информации и в
снижении вероятности её кражи. Для большинства информационных систем
свойственны некоторые факторы, которые могут создать уязвимости: большой
объем информации, внушительное количество пользователей в системе,
которые работают с данной информацией, анонимность доступа, передача
информации по каналам связи, а также возможность «информационных
диверсий». Все эти и многие другие факторы создают задачу поддержания
безопасности информационных сетей.
Важную роль в деятельности по защите информации и информационных
систем занимают мероприятия по созданию комплексной защиты. На данный
момент ни одна система защиты не обеспечивает стопроцентную безопасность,
в следствии возможности её взлома и поиска «программных дыр». Поэтому
требуется проанализировать особенности и состояние не только отечественной
информационной безопасности, но и мировой, а также сформулировать
оптимальную модель информационной безопасности, нашей страны и
определить возможности её реализации. Таким образом тема является
актуальной в современных условиях. """


def main():
    # Обработка текста
    extractor = KeywordExtractor(text)
    keywords = extractor.extract_keywords(num_keywords=5, lang='russian')

    query = '+'.join(word[0] for word in keywords)
    
    # Поиск ссылок по ключевым словам
    parser = GoogleSearchParser(query, 1)
    parser.set_query(f'курсовая{query}')
    parser.set_num(0)
    parser.get_results()

    parser.print_logs()


if __name__ == '__main__':
    print('\n└───────────────────── Anti-plagiarism LOGS ──────────────────────────┘')
    start = time()
    print(f'#### Start time: {datetime.now()}\n')
    main()
    print(f'\n### Execution time: {(time() - start) / 60 } m')
    print('\n┌────────────────── Program execution completed ──────────────────────┐')