

МЕТОДЫ

1. алгоритм Левенштейна. 
Он позволяет определить количество изменений, необходимых для превращения одного текста в другой. После этого можно вычислить отношение количества изменений к длине проверяемого текста и оценить степень сходства
2. Хеширование текста.
Позволяет быстро вычислять хэш-значение для каждого слова или фрагмента текста и сравнивать их между собой
3. Формулы те что были в программе сейчас по сходимости

Для выявления ключевых слов, чтобы вбивать их в запрос 
1. Word2Vec - это метод, который позволяет представлять слова в виде векторов в многомерном пространстве. Это позволяет эффективно вычислять семантическую близость между словами и находить слова, которые часто встречаются вместе.
2. NLTK (Natural Language Toolkit) - это библиотека для работы с текстом на языке Python. Она содержит множество инструментов для анализа текстовых данных, включая токенизацию (разбиение текста на слова и предложения), лемматизацию (приведение слов к их базовой форме) и выделение ключевых слов.

